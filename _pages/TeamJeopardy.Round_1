 ----
==Eclipse Shortcuts==
**Question** When you want to organize imports you type this important key combination.
**Answer** What is ctrl-shift-o

**Question** When you want to re-run the last thing you executed, you'll type this.
**Answer** What is ctrl-F11

**Question** Your code doesn't look quite right and you want to make it look better. You better press this key combination.
**Answer** What is ctrl-shift-f

**Question** If you want to quickly modify a project's properties, I'm the key combination to hit.
**Answer** What is alt-enter?

**Question** When you want to save all of your work, press me.
**Answer** What is ctrl-shif-s

**Question** When you want to close all of your files, don't do it individually.
**Answer** What is ctrl-shift-F4

**Question** When you want to switch quickly between windows, I'm your key combination.
**Answer** What is ctrl-F6

**Question** There is a syntax error on a particular line. Go to that line and hit me for a list of options to fix it.
**Answer** What is ctrl-1

----
==Testing==
**Question** You're about to start solving a problem in Java. This is the first code you write.
**Answer** What is a unit test?

**Question** You're practicing this when you write a test, get the test to compile, get the test to pass.
**Answer** What is TDD?

**Question** I'm a class that always returns a hard-coded value.
**Answer** What is stub?

**Question** I'm a class that keeps track of behavior or tracks the use of methods.
**Answer** What is a mock?

**Question** I'm a special kind of stub that always fails or throws an exception
**Answer** What is a crash test dummy?

**Question** I've used this to made sure to mock or stub out everything except what I'm trying to test.
**Answer** What is test isolation?

----
==Java==
**Question** When objects are no longer reachable, the JVM gets rid of them using this.
**Answer** What is garbage collection?

**Question** When you want to comment from a point in a line to the end of a line, you use two of these
**Answer** What is the / character?

**Question** Every class inherits either directly or indirection from me.
**Answer** What is Object?

**Question** String x="Hello"; String y="OKC";x=y; I am x.
**Answer** What is a reference to y or what is OKC.

**Question** There is a special method that initializes an instance.
**Answer** What is a constructor?

**Question** This is a type of class that cannot be instantiated and is designed to act as a base class.
**Answer** What is an abstract class?

**Question** A class that picks up instance variables and methods directly from another class is using this.
**Answer** Inheritance

**Question** After calling **new** to instantiate a class, this method is automatically executed.
**Answer** What is a constructor.

**Question** When you add specially formatted comments to classes and methods, you're using this.
**Answer** What is Java Doc?

**Question** I indicate something as a class method or class variable.
**Answer** What is static?

**Question** If you use this you're setting yourself up for a beating later. It helps you evaluate several different conditions together.
**Answer** What is a switch statement?

**Question** We needed to rearranged the contents of a List so we used this method.
**Answer** What is Collections.shuffle?

**Question** A method has it, a function does not.
**Answer** What is "this"

**Question** I've only got method definitions and no bodies.
**Answer** What is an interface?

**Question** To do this, I've just written this code: new Foo()
**Answer** What is instantiation?

**Question** I'm responsible for handling the memory in Java.
**Answer** What is the garbage collector?

**Question** All newly created objects are placed on me.
**Answer** What is the heap?

**Question** Local variables are stored on me.
**Answer** What is the stack?

**Question** Saying you're "passing an object" isn't really correct. I'm what you're actually passing.
**Answer** What is a reference?

**Question** When you enter {} you get a new one of me. When you leave, all the local variables are now out of me.
**Answer** What is scope?

**Question** Red, Green, ...
**Answer** What is refactor?

**Question** This is something I make sure to maintain while refactoring.
**Answer** Passing tests/behavior.


----
==General OO==
**Question** When you perform software development based on decomposition by objects, you are doing this.
**Answer** What is Object-Oriented Development?

**Question** When you declare an instance variable as private, you are using this.
**Answer** What is encapsulation?

**Question** There is something musical sounding about this kind of class.
**Answer** What is a base class.

**Question** This step, required for "hard" polymorphism, happens when a sub class method replaces an superclass method.
**Answer** What is method overriding?

**Question** Removing the responsibility for creating dependencies from a class is an example of this.
**Answer** What is IoC or DI

**Question** Making a module so that it cannot change but can still be extended is an example of this.
**Answer** What is the O/C principle

**Question** When we switch from having things depend on concrete classes to having them instead depend on abstractions, we are using this principle.
**Answer** What is DI

**Question** When you make sure that everything in a base class now and for the future applies to the derived class, you are making sure to use this.
**Answer** What is the Liskov substitution principle?

**Question** I'm a class that inherits from an existing class.
**Answer** What is inheritance?

**Question** I'm a design pattern where a base class method relies on an abstract method implemented in a derived class.
**Answer** What is the template method pattern?

----
==UML==
**Question** I'm showing this by using an arrow-head on a line.
**Answer** What is navigability?

**Question** I'm a box with an underlined name in me.
**Answer** What is an object?

**Question** I'm a word after a : on a message or in a box representing an object.
**Answer** What is type/class?

**Question** I'm a line with an arrow-head connecting two classes.
**Answer** What is gen/spec or inheritance?

**Question** When you want to show the relative numbers of things in a relationship, you use me.
**Answer** What is multiplicity?

**Question** If you're not sure whether you should use an attribute or not, you should instead use me.
**Answer** What is a concept/class?

----
==Kitchen Sink==
**Question** When you solve a problem, you always introduce these.
**Answer** What is a problem.

**Question** Something that your company is no longer doing much of.
**Answer** What is garbage collection.
